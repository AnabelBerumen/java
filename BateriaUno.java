//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @POO2017
//  @ File Name : @BateriaUno
//  @ Date : @12/01/2018
//  @ Author : @Chavez Berumen Anabel
//
//




public class BateriaUno {
	
	//Inicio metodo esPositivo
	public boolean esPositivo(int num) {
		
		
		boolean bandera = false;
		
		if ( num > 0 ){//inicio if
			
			bandera = true;
			
		}//fin if
		
		return bandera;
	}//fin  metodo esPositivo
	
	
	//inicio metodo esMayor
	public boolean esMayor(int numA, int numB) {
		
		
		boolean bandera = false;
		
		if ( numA > numB ){ //inicio if
		
			bandera = true;
		}//fin if
		
		return bandera;
	}//fin ciclo metodo esMayor
	
	
	//inicio metodo esMenor
	public boolean esMenor(int numA, int numB) {
		
		
		boolean bandera = false;
		
		if ( numA < numB ){//inicio if
		
			bandera = true;
		}//fin if
			
		return bandera;
	}//fin metodo esMenor
	
	
	//inicio metodo esIgual
	public boolean esIgual(int numA, int numB) {
		
		
		boolean bandera = false;
		
		if (numA == numB ){//inicio if
		
		
			bandera = true;
				}//fin if

	return bandera;
	
	}//fin metodo esIgual
	
	
	//inicio metodo esMayor
	public int esMayor(int numA, int numB, int numC) {
		
		
		if (numA == numB){//inicio if-else
    	
    		if ( numA == numC){
    			
    				return 0;
    				 }
	
	
		} else {
    
    		if(numA > numB){
          
         	  if(numA > numC){
           
      				return   numA;
          	
          	
          	 }else{
           
        	 	return numC;
    				}
    			}
    	
    	
    	else{
    	
    		if( numB > numC){
    		
                  return   numB ;
    		
    		
    		} else{
    
				if (numB< numC){

    				  return numC;}
    			
  			   	 }
  			  }	
  		  }// fin if-else
   		 return 0;
    
    }//fin metodo esMayor
  		

	
	
	//inicio metodo calcularMedio
	public int calcularMedio(int numA, int numB, int numC) {
		
		
		if (numA != numB){//inicio if-else
			
			if (numA != numC){
				
				if ( numA < numB){
					
					if (numB < numC){
						
						return numB;}
							
							else {
								if (numA < numC){
								
								return numC;
								}
								else {
									return numA;
								}
							}
							
						}
					}
				}//fin if-else
				return 0;							
			}//fin metodo calcularMedio
		
				
	//inicio metodo convertirSegundos
	public String convertirSegundos(int segundos) {
		
		
	    char t = ':';
		String tiempo = "";
		int horas = 0;
		int minutos = 0;
		
		horas = segundos / 3600;
		tiempo = tiempo + horas + t;
		segundos = segundos % 3600;
		minutos = segundos / 60;
		tiempo = tiempo + minutos + t;
		segundos = segundos % 60;
		tiempo = tiempo + segundos;
	
		return tiempo;
	
	}//fin metodoconvertirSegundos
	
	
	
	//inicio metodo divisor
	public String divisor( int n) {
		
		String div = "";
		int i = 1;
		
		while ( i <= n ){//inicio while
			
			if ( n % i == 0 ){//inicio if
				
			div = div +  i+ " "	;
		
			}//fin if
		i++;	
		}//fin while
	return div;
	}//fin metodo divisor
	
	
	
	//inicio metodo sumaEnteros
	public int sumaEnteros(int n) {
		
		int i = 1;
		int suma = 0;
		
		while (i <= n ){//inicio while
			
			suma = suma + i;
			i++;
			
		}//fin while
		return suma;
	}//fin metodo sumaEnteros
	
	
	//inicio metodo sumaPar
	public int sumaPar(int n) {
		
		int i = 1;
		int suma = 0;
		
		while ( i <= n ){//inicio while
			if ( i % 2 == 0 ){//inicio if
				
				suma = suma + i;
			}//fin if
			i++;
			
		}// fin while
	  return suma;
	}//fin metodo sumaPar
	
	//inicio metodo sumaImpar
	public int sumaImpar(int n) {
		
		int i = 1;
		int suma = 0;
		
		while ( i <= n ){//inicio while
			if ( i % 2 != 0 ){//inicio if
				
				suma = suma + i;
			}//fin if
			i++;
			
		}// fin while
	  return suma;
	}//fin metodo sumaimPar
	
	
	
	
	//inicio metodo promedioPares
	public int promedioPares(int n) {
			
		int i = 1;
		int suma = 0;
		int prom =0;
		
		while ( i <= n ){//inicio while
			if ( i % 2 == 0 ){//inicio if
				
				suma = suma + i;
			}//fin if
			i++;
			
		}// fin while
	
		prom = suma / (n/2);
	  return prom;
	
	}
	
	//inicio metodo promedioImpares
	public double promedioImpares(int n) {
			
		int i = 1;
		int suma = 0;
		int prom = 0;
		
		while ( i <= n ){//inicio while
			if ( i % 2 != 0 ){//inicio if
				
				suma = suma + i;
			}//fin if
			i++;
			
		}// fin while
		
		prom = suma / ( n / 2 );
		return prom;
	
	}//fin metodo promedio Impares
	
	
	//inicio metodo tablaMultiplicar
	public String tablaMultiplicar(int n) {
		
		int i = 1;
		String mul = "";
		
		while ( i <= 10 ){//inicio while
			
			 
			
			mul = mul + "\n" + i+ "*" + n + "=" + ( i * n ) ;
				i++;
		}//fin while
		return mul;
	
	}//fin metodo tablaMultiplicar
	
	
	//inicio metodo factorial
	public int factorial(int n) {
		
		int factorial = 1;
		int i = 1;
		
		while ( i <= n){ //inicio while
		
			factorial = i * factorial;
			i++;
		}//fin while
		return factorial;
}//fin metodo factorial


	
	 //inicio metodo esPrimo
	public boolean esPrimo(int n) {
		
		
		boolean bandera = false;
		int i = 1;
		int cont = 0;
		
		while ( i <= n ){//inicio while
			
			if ( n % i == 0 ){ //incio if
				cont = cont + 1;
				
			}//fin if
			i++;
		}//fin while
		
		if ( cont == 2 ){//inicio if
			bandera = true;
		}//fin if
	return bandera;
	
	}//fin metodo es primo
	
	
	//inicio metodo potencia
	public double potencia(double base, int exp) {
		
		int i = 1;
		double potencia = 1;
		
		while ( i <= exp ){//inicio while
			
			potencia = (potencia * base);
			
			i++;
		}//fin while
		
		return potencia;
	
	} //fin metodo potencia
}//fin bateria uno
